version: "3.5"
services:
  zk-1:
    image: confluentinc/cp-zookeeper:5.5.6
    hostname: zk-1
    container_name: zk-1
    volumes:
      - data-zk-log-1:/var/lib/zookeeper/log
      - data-zk-data-1:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
  
  zk-2:
    image: confluentinc/cp-zookeeper:5.5.6
    hostname: zk-2
    container_name: zk-2
    volumes:
      - data-zk-log-2:/var/lib/zookeeper/log
      - data-zk-data-2:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=2
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
  
  zk-3:
    image: confluentinc/cp-zookeeper:5.5.6
    hostname: zk-3
    container_name: zk-3
    volumes:
      - data-zk-log-3:/var/lib/zookeeper/log
      - data-zk-data-3:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=3
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888

  kafka-1:
    image: confluentinc/cp-enterprise-kafka:5.5.6
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - "8778:8778"
      - "9093:9093"
    networks:
      - confluent
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - /root/training-administration-src/jolokia-jvm.jar:/opt/jolokia-jvm.jar:z
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,RAT://192.168.1.216:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,RAT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LOG_RETENTION_BYTES: 20971520
      KAFKA_LOG_RETENTION_MINUTES: 10

  kafka-2:
    image: confluentinc/cp-enterprise-kafka:5.5.6
    hostname: kafka-2
    container_name: kafka-2
    ports:
      - "9094:9094"
    networks:
      - confluent
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - /root/training-administration-src/jolokia-jvm.jar:/opt/jolokia-jvm.jar:z
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,RAT://192.168.1.216:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,RAT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LOG_RETENTION_BYTES: 20971520
      KAFKA_LOG_RETENTION_MINUTES: 10

  kafka-3:
    image: confluentinc/cp-enterprise-kafka:5.5.6
    hostname: kafka-3
    container_name: kafka-3
    ports:
      - "9095:9095"
    networks:
      - confluent
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - /root/training-administration-src/jolokia-jvm.jar:/opt/jolokia-jvm.jar:z
    environment:
      KAFKA_BROKER_ID: 103
      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,RAT://192.168.1.216:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,RAT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LOG_RETENTION_BYTES: 20971520
      KAFKA_LOG_RETENTION_MINUTES: 10

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.6
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - confluent
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT: 120
    ports:
      - "8081:8081"

  schema-registry-2:
    image: confluentinc/cp-schema-registry:5.5.6
    hostname: schema-registry-2
    container_name: schema-registry-2
    networks:
      - confluent
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-2
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry-2:8082
      SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT: 120
    ports:
      - "8082:8082"

  debezium-connect:
    image: debezium/connect:1.4
    hostname: debezium-connect
    container_name: debezium-connect
    environment:
      BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081,http://schema-registry-2:8082"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081,http://schema-registry-2:8082"
    ports:
      - 8083:8083
    networks:
      - confluent

  debezium-connect-2:
    image: debezium/connect:1.4
    hostname: debezium-connect-2
    container_name: debezium-connect-2
    environment:
      BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081,http://schema-registry-2:8082"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081,http://schema-registry-2:8082"
    ports:
      - 8084:8083
    networks:
      - confluent

  ksql-server:
    image: confluentinc/cp-ksql-server:5.4.6
#    image: confluentinc/ksqldb-server:0.23.1
    hostname: ksql-server
    container_name: ksql-server
    ports:
      - "8088:8088"
    networks:
      - confluent
    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      KSQL_HOST_NAME: ksql-server
      KSQL_APPLICATION_ID: "etl-demo"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_AUTO_OFFSET_RESET: "earliest"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  ksql-server-2:
    image: confluentinc/cp-ksql-server:5.4.6
    hostname: ksql-server-2
    container_name: ksql-server-2
    ports:
      - "8089:8088"
    networks:
      - confluent
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      KSQL_HOST_NAME: ksql-server-2
      KSQL_APPLICATION_ID: "etl-demo"
      KSQL_LISTENERS: "http://0.0.0.0:8089"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  ksqldb-cli:
    image: confluentinc/cp-ksql-cli:5.4.6
    container_name: ksqldb-cli
    depends_on:
      - ksql-server
    networks:
      - confluent
    entrypoint: /bin/sh
    tty: true

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.5.6
    hostname: control-center
    container_name: control-center
    restart: always
    networks:
      - confluent
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 3
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 3
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 3
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 3
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 3
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 3
      CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
      CONTROL_CENTER_CONNECT_CLUSTER: "connect:8083"
      CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  tools:
    image: cnfltraining/training-tools:19.06
    hostname: tools
    container_name: tools
    volumes:
      - ./data:/data
    networks:
      - confluent
    command: /bin/sh
    tty: true

#pipelines are defined locally in pipelines.yml so make sure you have it and map path according to your setup 
  logstash:
    image: docker.elastic.co/logstash/logstash:7.16.1
    container_name: logstash_1
    hostname: logstash_1
    command: ['--config.reload.automatic']
    environment:
      TZ: 'Africa/Johannesburg'
      XPACK_MONITORING_ENABLED: 'false'
      LOG_LEVEL: 'debug'
    ports:
     - 9600:9600
    networks:
      - confluent
    volumes:
      - /opt/ansible/es_logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml

volumes:
  data-zk-log-1:
  data-zk-data-1:
  data-zk-log-2:
  data-zk-data-2:
  data-zk-log-3:
  data-zk-data-3:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:
  es_logstash:
    external: true

networks:
  confluent:
